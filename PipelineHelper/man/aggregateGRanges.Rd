% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregateList.R
\name{aggregateGRanges}
\alias{aggregateGRanges}
\alias{aggregateGRangesList}
\title{Aggregate variant lists}
\usage{
aggregateGRangesList(variants)

aggregateGRanges(groups)
}
\arguments{
\item{variants}{A data.frame of variants with columns "group_id", "chr", "pos", "ref", "alt".}

\item{groups}{A data.frame of groups with column "group_id", "chr", "start", "end".}
}
\value{
A GRangesList with one element per group

A GRanges with one range per group
}
\description{
Generate GRanges or GRangesList of variants for input to association tests
}
\details{
These functions produce output suitable for defining a \code{\link{SeqVarRangeIterator}} or \code{\link{SeqVarListIterator}} object.
}
\examples{
library(SeqVarTools)
gds <- seqOpen(seqExampleFileName())
seqSetFilter(gds, variant.sel=seqGetData(gds, "chromosome") == 22)
variants <- data.frame(chr=seqGetData(gds, "chromosome"),
                       pos=seqGetData(gds, "position"),
                       ref=refChar(gds),
                       alt=altChar(gds, n=1),
                       stringsAsFactors=FALSE)
variants$group_id <- sample(LETTERS[1:2], nrow(variants), replace=TRUE)
gr <- aggregateGRangesList(variants)
iterator <- SeqVarListIterator(gds, variantRanges=gr)

groups <- data.frame(group_id=LETTERS[1:2],
                     chr=22,
                     start=c(16000000, 2900000),
                     end=c(30000000, 49000000),
		     stringsAsFactors=FALSE)
gr <- aggregateGRanges(groups)
seqResetFilter(gds)
iterator <- SeqVarRangeIterator(gds, variantRanges=gr)

seqClose(gds)
}
